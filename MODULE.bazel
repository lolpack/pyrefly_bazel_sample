module(
    name = "pyrefly_bazel_sample",
    version = "0.0.1",
)

# Core Bazel dependencies
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_java", version = "8.14.0")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_shell", version = "0.3.0")
bazel_dep(name = "protobuf", version = "29.0")

# Pull in rules_python from the Bazel Central Registry (update version as needed).
bazel_dep(name = "rules_python", version = "1.6.3")

# Use rules_python's module extension to register a toolchain.
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = False,
    python_version = "3.11",
)

# Optional: use pip.parse extension if you want to manage pip wheels with MODULE.bazel
# (uncomment and adapt if you add third-party pip deps):
# pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
# pip.parse(
#     hub_name = "pypi",
#     python_version = "3.11",
#     requirements_lock = "//:requirements_lock.txt",
# )
# use_repo(pip, "pypi")
